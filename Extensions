Extension 1:
---------------------------------------------------
-- Table `mydb`.`Genre`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS Genre (
  idGenre INT NOT NULL,
  GenreName VARCHAR(45) NOT NULL,
  PRIMARY KEY (idGenre));


-- -----------------------------------------------------
-- Table `mydb`.`Movie`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS Movie (
  idMovie INT NOT NULL,
  Title VARCHAR(45) NOT NULL,
  Score INT NOT NULL,
  ReleaseYear INT NOT NULL,
  Genre_idGenre INT NOT NULL,
  PRIMARY KEY (idMovie),
  CONSTRAINT fk_Movie_Genre1
    FOREIGN KEY (Genre_idGenre)
    REFERENCES Genre (idGenre));


-- -----------------------------------------------------
-- Table `mydb`.`People`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS People (
  idPeople INT NOT NULL,
  Name VARCHAR(45) NOT NULL,
  DOB DATE,
  PeopleCountry VARCHAR(45),
  Email VARCHAR(45),
  PRIMARY KEY (idPeople));


-- -----------------------------------------------------
-- Table `mydb`.`Roles`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS Roles (
  idRoles INT NOT NULL,
  Role VARCHAR(45) NOT NULL,
  PRIMARY KEY (idRoles));


-- -----------------------------------------------------
-- Table `mydb`.`People_has_Roles`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS People_has_Roles (
  People_idPeople INT NOT NULL,
  Roles_idRoles INT NOT NULL,
  Movie_idMovie INT NOT NULL,
  PRIMARY KEY (Movie_idMovie, People_idPeople, Roles_idRoles),
  CONSTRAINT fk_Movie_has_People_has_Roles_Movie1
    FOREIGN KEY (Movie_idMovie)
    REFERENCES Movie (idMovie),
  CONSTRAINT fk_People_has_Roles_People1
    FOREIGN KEY (People_idPeople)
    REFERENCES People (idPeople),
  CONSTRAINT fk_People_has_Roles_Roles1
    FOREIGN KEY (Roles_idRoles)
    REFERENCES Roles (idRoles));

Population:
INSERT INTO people (name, peoplecountry, dob, email) VALUES
    ('Stanley Kubrick', 'USA', null, null),
    ('George Lucas', 'USA', null, 'george@email.com'),
    ('Robert Mulligan', 'USA', null, null),
    ('James Cameron', 'Canada', null, 'james@cameron.com'),
    ('David Lean', 'UK', null, null),
    ('Anthony Mann', 'USA', null, null),
    ('Theodoros Angelopoulos', 'Greece', null, 'theo@angelopoulos.com'),
    ('Paul Verhoeven', 'Netherlands', null, null),
    ('Krzysztof Kieslowski', 'Poland', null, 'email@email.com'),
    ('Jean-Paul Rappeneau', 'France', null, null),
    ('Keir Dullea', null, '1936-05-30', null),
    ('Mark Hamill', null, '1951-09-25', null),
    ('Gregory Peck', null, '1916-04-05', null),
    ('Leonardo DiCaprio', null, '1974-11-11', null),
    ('Julie Christie', null, '1940-04-14', null),
    ('Charlton Heston', null, '1923-10-04', null),
    ('Manos Katrakis', null, '1908-08-14', null),
    ('Rutger Hauer', null, '1944-01-23', null),
    ('Juliette Binoche', null, '1964-03-09', null),
    ('Gerard Depardieu', null, '1948-12-27', null),
    ('Arthur C Clarke', null, null, 'arthur@clarke.com'),
    ('Harper Lee', null, null, 'harper@lee.com'),
    ('Boris Pasternak', null, null, 'boris@boris.com'),
    ('Frederick Frank', null, null, 'fred@frank.com'),
    ('Erik Hazelhoff Roelfzema', null, null, 'erik@roelfzema.com'),
    ('Edmond Rostand', null, null, 'edmond@rostand.com');

insert into roles (role) VALUES
  ('Writer'),
  ('Star'),
  ('Director');


INSERT INTO genre (genrename) VALUES
    ('Science Fiction'),
    ('Drama'),
    ('Romance'),
    ('Historical'),
    ('Thriller');

INSERT INTO movie (title, releaseyear, genre_idgenre, score) VALUES
    ('2001: A Space Odyssey', 1968, 1, 10),
    ('Star Wars: A New Hope', 1977, 1, 7),
    ('To Kill A Mockingbird', 1962, 2, 10),
    ('Titanic', 1997, 3, 5),
    ('Dr Zhivago', 1965, 4, 8),
    ('El Cid', 1961, 4, 6),
    ('Voyage to Cythera', 1984, 2, 8),
    ('Soldier of Orange', 1977, 5, 8),
    ('Three Colours: Blue', 1993, 2, 8),
    ('Cyrano de Bergerac', 1990, 5, 9);

Insert into people_has_roles (people_idpeople, roles_idroles, movie_idmovie) values
  (1, 3, 1),
  (2, 3, 2),
  (3, 3, 3),
  (4, 3, 4),
  (5, 3, 5),
  (6, 3, 6),
  (7, 3, 7),
  (8, 3, 8),
  (9, 3, 9),
  (10, 3, 10),
  (11, 2, 1),
  (12, 2, 2),
  (13, 2, 3),
  (14, 2, 4),
  (15, 2, 5),
  (16, 2, 6),
  (17, 2, 7),
  (18, 2, 8),
  (19, 2, 9),
  (20, 2, 10),
  (21, 1, 1),
  (2, 1, 2),
  (22, 1, 3),
  (4, 1, 4),
  (23, 1, 5),
  (24, 1, 6),
  (7, 1, 7),
  (25, 1, 8),
  (9, 1, 9),
  (26, 1, 10);


Query: 

i) 
select title, name, role from movie left join people_has_roles
on idmovie = movie_idmovie left join people 
on people_idpeople = idpeople left join roles 
on roles_idroles = idroles
where role = 'Director';

ii) 
select title, name, role from movie left join people_has_roles
on idmovie = movie_idmovie left join people 
on people_idpeople = idpeople left join roles 
on roles_idroles = idroles
where role = 'Director' or role = 'Star' order by title;

iii)
select title, name, role, peoplecountry as country from movie left join people_has_roles
on idmovie = movie_idmovie left join people 
on people_idpeople = idpeople left join roles 
on roles_idroles = idroles
where role = 'Director' and peoplecountry = 'USA';

iv)
select title, name, count(name) as Amount_of_roles from movie left join people_has_roles
on idmovie = movie_idmovie left join people 
on people_idpeople = idpeople left join roles 
on roles_idroles = idroles
where role = 'Director' or role = 'Writer' group by name, title having count(name) > 1;

v)
select title, name, score from movie left join people_has_roles
on idmovie = movie_idmovie left join people 
on people_idpeople = idpeople left join roles 
on roles_idroles = idroles
where role = 'Director' and score >=8;


Extension 2:

Populating:
INSERT INTO people (name, dateofbirth, country, email) VALUES
('Chris Hemsworth', '1983-08-11', 'Australia', 'chris.hemsworth@email.com'),
('Scarlett Johansson', '1984-11-22', 'USA', 'scarlett.johansson@email.com'),
('Idris Elba', '1972-09-06', 'United Kingdom', 'idris.elba@email.com'),
('Gal Gadot', '1985-04-30', 'Israel', 'gal.gadot@email.com'),
('Ryan Reynolds', '1976-10-23', 'Canada', 'ryan.reynolds@email.com'),
('Emma Stone', '1988-11-06', 'USA', 'emma.stone@email.com'),
('Daniel Craig', '1968-03-02', 'United Kingdom', 'daniel.craig@email.com'),
('Margot Robbie', '1990-07-02', 'Australia', 'margot.robbie@email.com'),
('Michael B. Jordan', '1987-02-09', 'USA', 'michael.jordan@email.com'),
('Tessa Thompson', '1983-10-03', 'USA', 'tessa.thompson@email.com'),
('Tom Hardy', '1977-09-15', 'United Kingdom', 'tom.hardy@email.com'),
('Lupita Nyong', '1983-03-01', 'Mexico', 'lupita.nyongo@email.com'),
('Henry Cavill', '1983-05-05', 'United Kingdom', 'henry.cavill@email.com'),
('Priyanka Chopra', '1982-07-18', 'India', 'priyanka.chopra@email.com'),
('John Boyega', '1992-03-17', 'United Kingdom', 'john.boyega@email.com');

INSERT INTO roles (role) values
  ('Actor')

INSERT INTO people_has_roles (people_idpeople, roles_idroles, movie_idmovie ) values
  (27, 4, 1),
  (28, 4, 1),
  (29, 4, 1),
  (30, 4, 2),
  (31, 4, 2),
  (32, 4, 2),
  (33, 4, 3),
  (34, 4, 3),
  (35, 4, 3),
  (36, 4, 4),
  (37, 4, 4),
  (38, 4, 4),
  (39, 4, 4),
  (40, 4, 5),
  (41, 4, 5);

Queries:
#Selects all actors and Star for the movies, this orders by title
select title, name, role from movie left join people_has_roles
on idmovie = movie_idmovie left join people 
on people_idpeople = idpeople left join roles 
on roles_idroles = idroles
where role = 'Actor' or role = 'Star' order by title;


